{
  "swagger": "2.0",
  "info": {
    "title": "Product API",
    "description": "API to manage products in a store",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/welcome": {
      "get": {
        "summary": "Get welcome message",
        "produces": ["text/plain"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Welcome message",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a new user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User details for registration",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully registered",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request - All input is required"
          },
          "409": {
            "description": "Conflict - User already exists"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login with user credentials",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User credentials for login",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request - Invalid credentials"
          }
        }
      }
    },
    "/product": {
      "get": {
        "summary": "Get all products",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "count": { "type": "integer" },
                "data": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/Product" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Product object",
            "required": true,
            "schema": { "$ref": "#/definitions/Product" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad request" }
        }
      },
      "put": {
        "summary": "update a product",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Product object",
            "required": true,
            "schema": { "$ref": "#/definitions/Product" }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/product/{_id}": {
      "get": {
        "summary": "Get a product by ID",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          { "name": "_id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "400": { "description": "Bad request" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "summary": "Delete a product by ID",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          { "name": "_id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Bad request" }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "bearerFormat": "JWT",
      "scheme": "bearer",
      "description": "Bearer authentication token"
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "_id": { "type": "string" },
        "title": { "type": "string" },
        "price": { "type": "number" },
        "color": { "type": "string" },
        "size": { "type": "string" },
        "description": { "type": "string" },
        "createdAt": { "type": "string", "format": "date-time" }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    }
  }
}
